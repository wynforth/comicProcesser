CHANGELOG

v1.5
	- added image2icon script for creating folder icons. this also includes two template files used in the process
v1.4
	- 'infinite' depth to the folders each section between a - is made into a folder 
	- depth level of folder structure defaults to 2
	- toggle for turning off sorting
v1.3 
	- added -#, --numbers toggle for determining whether issues numbers are preceded by a # or not (default assumes they are)
	- fixed a bug in single issue processing putting the tmp directory in the wrong place which could cause errors
v1.2
	- implemented single issue processing
	
TO DO
- setting for how deep a folder structure to create default 2
- test if the file is an archive before processing it
- option for not keeping a backup
- option for automode (quiet, no backup, recursive)
- option for superquiet mode (no output no logging)
- option to only sort
- option for not setting the icon
- specify your own regular expression for sorting
- linux support
- have it unset the executable bit of archive files
- find alternatives to using external tools (mainly sips and seticon)

BUGS TO FIX

USAGE

######################################################################################

COMIC PROCESSOR

######################################################################################

comicProcessor.sh [-opts] item

Processes comics so that it adds an icon to match (usually) the cover, but uses whatever the first image is.
Re-compresses the files into both cbr, and cbz keeps the file with the smallest size
Sorts them into their respective folders based on:
Man Directory - <sub folder> - <extra stuff> #000.ext
Example:
file: X-Men - Legacy #465.cbz
would go to /X-Men/Legacy/X-Men - Legacy #465.cbz

if item is a directory will process all files in the directory, and sub directories
if item is a file will only process that single file


OPTIONS:
   -h, --help           Show the help message
   -d <path>, --topdir  Top path to where your comics are stored [Default: ~/Comics]
   -b <path>, --backup  Path to backup original file to. [Default: ~/Comics/Backup]
   --level, -l #        Depth level of folder structure created, use 0 for infinite. [Default: 2]
   --nosort, -S			Turn off sorting
   --numbers, -n        Don't use # in parsing just use the last number in the filename
   --nonrecursive, -N   Does not recurse into subdirectories. This option is ignored if <item> is a file
   --interactive, -i    Interactive mode, will open folders and give you a pause to modify the files
   --verbose, -v        provides some extra information, e.g. amount of space saved from original file, directory the final file is saved.
   --quiet, -q          Output is redirected a log file: comicProcessor.log. Can not be used with interactive mode

INTERACTIVE MODE:
	Using the -i or --interactive option this script will operate in interactive mode. After extracting a file the script will open the extracted directory and pause. At this time you can add/remove/edit files. Once you are done simply return to the script and press enter to continue. You will also be presented with the option to stop the script after each directory.
	
######################################################################################

IMAGE 2 ICON

######################################################################################
	
Creates a 512x512 png based on included templates for use as a folder icon. Also creates ico files, and if libicns is installed icns files.	

image2icon.sh [opts] imgdir <outputdir>

	imgdir        The directory where your images are stored
	outputdir     Options, the location where the results end up. they will be put into their respective sub directories

OPTIONS:
	-P, --nopng   Will not retain the png file
	-W, --noico   Will not create an ico file
	-M, --noicns  Will not create an icns file
	-a, --all     Will create a 512x512 icon as part of the OSX icns file.
	-v, --verbose I hope we all know what this option does by now

IMAGES:
	These can be in (almost) any format and should be at least 512ps wide. It will work best with images that are at least a 3:2 ratio (512x341).

OUTPUT:
	The script creates a 512x512 png file with the template applied. it will also create an ico file with icons with dimensions 256, 48, 32,24, and 16. If possible it will also create an icns file with icons with dimensions 256, 128, 32, 16

######################################################################################

ICONIZE FOLDER

######################################################################################

Applies a custom icon to a folder based on the naming scheme of the folder, depth of the folder doesn't matter. If there is no matching icon it will list out the folder so you know what you need to create icons for.
For examples
given:
	basedir = ~/Comics/
	Iconlocation = ~/Icons/

for a given folder ie ~/Comics/Spider-Man/The Amazing Spider-Man/
it will try to use the icon ~/Icons/Spider-Man - The Amazing Spider-Man.icns (or .ico for linux)

iconizeFolders.sh [opts] dir icons

	directory     The base directory to use, all folders in this directory will be used, it will not add an icon to this directory
	icons		  Directory where your icons are kept. it will try the base directory, if an icon is not found it will then try a subdirectory of either icns/ or ico/

OPTIONS:
	-R, --nonrecursive     Will not recurse subdirectories
	-v, --verbose          Displays extra output

